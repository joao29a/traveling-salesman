#!/bin/bash

total=0

compile(){
    echo "Compiling..."
    make -C ./src
    make -C ./tester
}

tester-bf(){
    files=$(find ./testcases/bf-cases -type f | sort -V)
    resp="y"
    for file in $files; do
        if [ "./testcases/bf-cases/11.g" == $file ]; then
            echo -e "\n---Warning----"
            echo -e "The next test cases need about 45gb of memory"
            echo -e "Do you want to proceed? [y/n]: "
            read -r resp
        fi;
        if [ $resp == "y" ]; then
            execute "bf" $file 
        fi;
    done
}

execute(){
    printf "%-4s %-30s: " $1 $2
    init=$(date +%s%3N)
    result=$(./src/prog.out $1 $2 $3 $4 $5)
    let end=$(date +%s%3N)-$init
    let ms=$end%1000
    let sec=$end/1000
    let min=$sec/60
    let sec=$sec%60
    let total=$total+$end
    echo $result | ./tester/tester.out $2
    printf "(%'dm %'ds %'dms)\n" $min $sec $ms
}

tester(){
    files=$(find ./testcases/all -type f | sort -V)
    total=0
    for file in $files; do
        execute $1 $file $2 $3 $4
    done
    let ms=$total%1000
    let sec=$total/1000
    let min=$sec/60
    let sec=$sec%60
    printf "(%'dm %'ds %'dms)\n" $min $sec $ms
}

algs=(nn mst ga) 

case $1 in
"" | "all")
    for alg in ${algs[@]}; do
        tester $alg $2 $3 $4
    done
    ;;

nn)
    tester ${algs[0]}
    ;;

mst)
    tester ${algs[1]}
    ;;

ga)
    tester ${algs[2]} $2 $3 $4
    ;;

bf)
    tester-bf
    ;;


build)
    compile

esac
